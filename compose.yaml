version: '3'
services:
  api:
    #image: food-ordering-service-api:latest
    build:
      context: api/foodordering
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD="${POSTGRES_PASSWORD}"
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - SPRING_JPA_SHOW_SQL=true
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=DEBUG
    networks:
      - spring-postgres
    depends_on:
      - db
  db:
    image: postgres
    restart: always
    env_file: .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD="${POSTGRES_PASSWORD}"
    ports:
      - 5432:5432
    volumes:
      - foodordering-data:/var/lib/postgresql/data
      - ./api/foodordering/src/main/resources/import.sql:/docker-entrypoint-initdb.d/import.sql
    networks:
      - spring-postgres
  frontend:
    #image: food-ordering-service-frontend:latest
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - api
volumes:
  foodordering-data:
networks:
  spring-postgres:
